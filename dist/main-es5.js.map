{"version":3,"sources":["webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/main-menu/main-menu.component.ts","webpack:///src/app/main-menu/main-menu.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/photo.service.ts","webpack:///src/app/menu-toolbar/menu-toolbar.component.ts","webpack:///src/app/menu-toolbar/menu-toolbar.component.html","webpack:///src/app/plant-details/plant-details.component.ts","webpack:///src/app/plant-details/plant-details.component.html","webpack:///src/app/photography/photography.component.ts","webpack:///src/app/photography/photography.component.html","webpack:///src/app/microgreens/microgreens.component.ts","webpack:///src/app/microgreens/microgreens.component.html","webpack:///src/app/photo/photo.component.ts","webpack:///src/app/photo/photo.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/plant-new/plant-new.component.ts","webpack:///src/app/plant-new/plant-new.component.html","webpack:///src/app/new-microgreen-entry/new-microgreen-entry.component.ts","webpack:///src/app/new-microgreen-entry/new-microgreen-entry.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AboutComponent","selector","templateUrl","styleUrls","MainMenuComponent","mainMenuItems","HomeComponent","lottie","loadAnimation","container","document","getElementById","renderer","loop","autoplay","path","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","API_KEY","JSON_ARGS","PhotoService","http","tags","user_id","api_key","base_url","request_url","requestObservable","get","photosMetadataSubscriber","observer","subscribe","data","photosArray","photos","photo","photoSizesObservables","map","photoMetadata","getPhotoSizesObservable","id","photoSizes","element","sizes","size","index","length","next","complete","photo_id","providedIn","MenuToolbarComponent","PlantDetailsComponent","dialogRef","rack","object","rack_number","crop_id","crop","valueChanges","tray_number","update","close","_BASE_ROW_HEIGHT","_PHOTO_SPACING","PhotographyComponent","photoService","event","containerWidth","photographyContainer","nativeElement","clientWidth","rows","calculateRowDimensions","resizeAndPositionElements","getPhotoMetadataByTagsObservable","photosOrder","shuffleInPlace","photosMetadata","indexedById","createSkeletonElements","photoElements","rowBuffer","photosInfo","width","height","photoId","originalSize","find","label","ratio","scaledBaseWidth","push","spacesWidth","scaleRatio","photoInfo","photoElement","currentTop","row","currentLeft","top","left","onResize","array","i","randomChoiceIndex","Math","floor","random","f","reduce","Rack","MicrogreensComponent","dialog","currentRack","trayNumbers","racks","racksSnapshot","updateTrays","open","openPlantNewDialog","openPlantDetailsDialog","trays","a","b","key","tray_value","PhotoComponent","isFullscreen","currentSource","source","button","window","innerWidth","innerHeight","onClick","AppComponent","title","AppModule","initializeApp","declarations","imports","providers","bootstrap","PlantNewComponent","crop_types","list","ref","orderByValue","crops","crop_ref","crop_type","crop_type_value","seed_amount","seed_amount_value","time_planted","Date","now","state","new_crop_id","cancelAndClose","updateTray","NewMicrogreenEntryComponent","cropsTypesWriteable","pushNewCrop","PageNotFoundComponent","routes","component","AppRoutingModule","forRoot","relativeLinkResolution","exports","ProjectsComponent","worldObjects","Set","target","classList","contains","createCircle","clientX","clientY","posX","posY","newCircle","CircleObject","add","svgElement","svgCanvas","appendChild","parentElement","removeChild","handleMouseDown","InputState","radius","stroke","strokeFocus","strokeWidth","fill","clicked","hovered","createElementNS","setAttribute","String","addEventListener","handleMouseEnter","handleMouseLeave","handleMouseUp","updateColor","offsetX","getAttribute","offsetY","parent","handleMouseMove","removeEventListener","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"center-self\">\n  <h1>Social Links</h1>\n  <div fxLayout=\"row wrap\">\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Email\" href=\"mailto:me@panchoruy.com\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Facebook\" href=\"https://facebook.com/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Twitter\" href=\"https://twitter.com/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Instagram\" href=\"https://instagram.com/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"YouTube\" href=\"https://youtube.com/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Github\" href=\"https://github.com/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"LinkedIn\" href=\"https://www.linkedin.com/in/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n    <div fxFlex.lt-md=\"25%\" fxFlex.gt-sm=\"12.5%\">\n      <a class=\"social-icon socicon\" mat-icon-button alt=\"Flickr\" href=\"https://www.flickr.com/photos/panchoruy\" target=\"_blank\">\n        \n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit {\n\n  mainMenuItems: string[] = [\n    \"Photography\",\n    \"Projects\",\n    \"About\"\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n","<ul class=\"main-menu\">\n  <li *ngFor=\"let item of mainMenuItems;\"> \n    <a routerLink=\"/{{item | lowercase}}\"> {{item}} </a>\n  </li>\n</ul>","import { Component, OnInit } from '@angular/core';\n\ndeclare let lottie: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    // Enable logo animation.\n    lottie.loadAnimation({\n      container: document.getElementById(\"logo\"), // the dom element that will contain the animation\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      path: 'assets/animated_logo.json' // the path to the animation json\n    });\n  }\n\n}\n","<div class=\"center-self center-text\">\n  <div id=\"logo\"></div>\n  <app-main-menu></app-main-menu>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAGDgYs6Ym46_i_gJKqQc69Ak3oEnSQYJY\",\n    authDomain: \"microgreen-app.firebaseapp.com\",\n    databaseURL: \"https://microgreen-app-default-rtdb.firebaseio.com\",\n    projectId: \"microgreen-app\",\n    storageBucket: \"microgreen-app.appspot.com\",\n    messagingSenderId: \"798432698136\",\n    appId: \"1:798432698136:web:a4f51deeff5323b993486d\",\n    measurementId: \"G-FXJ3PSRDR3\"\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\n\nconst API_KEY = \"35aaa78f22e30b2123c479fccac9a369\";\nconst JSON_ARGS = \"format=json&nojsoncallback=1\";\n\n@Injectable({providedIn: 'root'})\nexport class PhotoService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  // Returns a photo list with sizes\n  getPhotoMetadataByTagsObservable(\n    tags: string = \"website\",\n    user_id: string = \"panchoruy\", \n    api_key: string = API_KEY) { \n\n    var base_url = \"https://www.flickr.com/services/rest/?method=flickr.photos.search\" \n    var request_url = `${base_url}&api_key=${api_key}&user_id=${user_id}&tags=${tags}&${JSON_ARGS}&extras=tags`\n\n    var requestObservable = this.http.get(request_url);\n\n    var photosMetadataSubscriber = (observer =>\n      requestObservable.subscribe((data: any) => {\n        var photosArray = data.photos.photo;\n        var photoSizesObservables = photosArray.map(photoMetadata => \n          this.getPhotoSizesObservable(photoMetadata.id))\n        // forkJoin allows to wait for all requests to be completed.\n        forkJoin(photoSizesObservables).subscribe((data: any) => {\n          var photoSizes = data.map(element => element.sizes.size);\n          // forkJoin should return the results in order.\n          for (var index = 0; index < photoSizes.length; index++) {\n            photosArray[index].sizes = photoSizes[index];\n          }\n          observer.next(photosArray);\n          observer.complete();\n        });\n      }));\n    \n    return new Observable(photosMetadataSubscriber);\n  }\n\n  private getPhotoSizesObservable(\n    photo_id: string, \n    api_key: string = API_KEY) {\n\n    var request_url = `https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=${api_key}&photo_id=${photo_id}&${JSON_ARGS}`\n    return this.http.get(request_url)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-toolbar',\n  templateUrl: './menu-toolbar.component.html',\n  styleUrls: ['./menu-toolbar.component.scss']\n})\nexport class MenuToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <a mat-stroked-button routerLink=\"/\">Back Home</a>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AngularFireObject } from '@angular/fire/database';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-plant-details',\n  templateUrl: './plant-details.component.html',\n  styleUrls: ['./plant-details.component.scss']\n})\nexport class PlantDetailsComponent implements OnInit {\n\n\ttray_number: number;\n\track_number: number;\n\track: AngularFireObject<any>;\n\tcrop: Observable<any>;\n\tcrop_id: string;\n\n  constructor(firebase: AngularFireDatabase,\n  \tpublic dialogRef: MatDialogRef<PlantDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { rack_number: AngularFireObject<string>, tray_number: number, crop_id: string }) {\n  \tthis.rack = firebase.object('racks/' + data.rack_number + '/trays');\n  \tthis.crop_id = data.crop_id;\n    this.crop = firebase.object('crops/' + data.crop_id).valueChanges();\n  \tthis.tray_number = data.tray_number;\n  }\n\n  ngOnInit(): void {\n  }\n\n  removeCrop() {\n  \tthis.rack.update({[this.tray_number]: 0});\n    this.dialogRef.close();\n  }\n\n  cancelAndClose(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div *ngIf=\"crop | async as crop_details\">\n<h1 mat-dialog-title>{{crop_details.crop_type}}</h1>\n<div mat-dialog-content>\n\t\t<p fxLayoutAlign=\"center center\">\n\t\t\t<mat-chip-list><mat-chip>State: {{crop_details.state}}</mat-chip></mat-chip-list>\n\t\t</p>\n\t<h3 fxLayoutAlign=\"center center\">Recent History</h3>\n\t<table mat-table></table>\n\t<h3 fxLayoutAlign=\"center center\">Actions</h3>\n\t<div fxLayout=\"row\" class=\"actionsList\">\n\t\t<button mat-stroked-button fxFlex=\"1 0 1\">\n\t  \t<mat-icon>waves</mat-icon> \n\t  \t<br>Water\n\t  </button>\n\t  <button mat-stroked-button fxFlex=\"1 0 1\">\n\t  \t<mat-icon>grain</mat-icon>\n\t  \t<br>Mist\n\t  </button>\n\t  <button mat-stroked-button fxFlex=\"1 0 1\">\n\t  \t<mat-icon>wb_iridescent</mat-icon>\n\t  \t<br>Remove Weight\n\t  </button>\n\t  <button mat-stroked-button fxFlex=\"1 0 1\">\n\t  \t<mat-icon>wb_sunny</mat-icon>\n\t  \t<br>Light\n\t  </button>\n\t  <button mat-stroked-button fxFlex=\"1 0 1\" class=\"greenButton\" >\n\t\t\t<mat-icon>content_cut</mat-icon> \n\t\t\t<br>Harvest\n\t\t</button>\n\t</div>\n</div>\n<div mat-dialog-actions>\n  <button mat-stroked-button (click)=\"removeCrop()\" class=\"redButton\" fxFlex=\"1 0 1\">\n  \t<mat-icon>delete</mat-icon>\n  \t<br>Remove\n  </button>\n  <button mat-stroked-button (click)=\"cancelAndClose()\" cdkFocusInitial fxFlex=\"1 0 1\">\n\t  <mat-icon>done</mat-icon>\n\t  <br>Done\n\t</button>\n</div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { PhotoService } from './../photo.service';\n\nconst _BASE_ROW_HEIGHT = 400;\nconst _PHOTO_SPACING = 5;\n\n@Component({\n  selector: 'app-photography',\n  templateUrl: './photography.component.html',\n  styleUrls: ['./photography.component.scss']\n})\nexport class PhotographyComponent implements OnInit {\n  @ViewChild('photographyContainer')\n  private photographyContainer: ElementRef;\n  // Dictionary of photo metadata indexed by id\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    var containerWidth = this.photographyContainer.nativeElement.clientWidth;\n    var rows = this.calculateRowDimensions(containerWidth);\n    this.resizeAndPositionElements(rows);\n  }\n\n  // Dictionary of photoMetadata indexed by id.\n  private photosMetadata: any;\n  // Array of photoMetadata (in order of display).\n  private photosOrder: any;\n  // Array off all photoElements\n  photoElements: any;\n\n  constructor(private photoService: PhotoService) { }\n\n  ngOnInit() {\n    this.photoService.getPhotoMetadataByTagsObservable().subscribe((photosArray: any) => {\n      // Store metadata indexed by id in memory, so that we can find sources faster\n      this.photosOrder = shuffleInPlace(photosArray.map(element => element.id));\n      this.photosMetadata = indexedById(photosArray);\n      // Calculate the client width to display the appropriate row size\n      var containerWidth = this.photographyContainer.nativeElement.clientWidth;\n      var rows = this.calculateRowDimensions(containerWidth);\n      this.createSkeletonElements();\n      this.resizeAndPositionElements(rows);\n    });\n    this.photoElements = [];\n  }\n\n  // Returns an array of rows, where each row has height width and \n  private calculateRowDimensions(containerWidth) {\n    var rows = [];\n    var rowBuffer = { photosInfo: [], width: 0, height: 0 };\n    for (var photoId of this.photosOrder) {\n      var originalSize = this.photosMetadata[photoId].sizes.find(size => size.label == \"Original\");\n      var ratio = originalSize.width / originalSize.height;\n      var scaledBaseWidth = ratio * _BASE_ROW_HEIGHT;\n      rowBuffer.width += scaledBaseWidth;\n      rowBuffer.photosInfo.push({ \"id\": this.photosMetadata[photoId].id, \"width\": scaledBaseWidth });\n      // Row is ready, rescale and ship\n      if (rowBuffer.width >= containerWidth) {\n        var spacesWidth = (rowBuffer.photosInfo.length - 1) * _PHOTO_SPACING;\n        var scaleRatio = rowBuffer.width / (containerWidth - spacesWidth);\n        rowBuffer.width = containerWidth;\n        rowBuffer.height = _BASE_ROW_HEIGHT / scaleRatio;\n        for (var photoInfo of rowBuffer.photosInfo) {\n          photoInfo.width /= scaleRatio;\n        }\n        rows.push(rowBuffer);\n        rowBuffer = { photosInfo: [], width: 0, height: 0 };\n      }\n    }\n    // Last row not complete\n    if (rowBuffer.width > 0) {\n      rowBuffer.height = _BASE_ROW_HEIGHT;\n      rows.push(rowBuffer);\n    }\n    return rows;\n  }\n\n  private createSkeletonElements() {\n    for (var photoId of this.photosOrder) {\n      var photoElement = {\n        sizes: this.photosMetadata[photoId].sizes\n      };\n      this.photoElements.push(photoElement);\n    }\n  }\n\n  private resizeAndPositionElements(rows) {\n    var currentTop = 0;\n    var index = 0;\n    for (var row of rows) {\n      var currentLeft = 0;\n      for (var photoInfo of row.photosInfo) {\n        this.photoElements[index].height = `${row.height}px`;\n        this.photoElements[index].width = `${photoInfo.width}px`;\n        this.photoElements[index].top = `${currentTop}px`;\n        this.photoElements[index].left = `${currentLeft}px`;\n        index++;\n        currentLeft += photoInfo.width;\n        currentLeft += _PHOTO_SPACING;\n      }\n      currentTop += row.height;\n      currentTop += _PHOTO_SPACING;\n    }\n  }\n}\n\nfunction shuffleInPlace(array) {\n  if (array.length <= 1) return array;\n  for (let i = 0; i < array.length; i++) {\n    var randomChoiceIndex = Math.floor(Math.random() * array.length);\n    [array[i], array[randomChoiceIndex]] = [array[randomChoiceIndex], array[i]];\n  }\n  return array;\n}\n\nfunction indexedById(photosArray) {\n  function f(object, element) {\n    object[element.id] = element;\n    return object;\n  }\n  return photosArray.reduce(f, {});\n}","<div #photographyContainer id=\"photography-container\">\n  <app-photo \n    *ngFor=\"let photoElement of photoElements\"\n    class=\"photo\"\n    [sizes]=\"photoElement.sizes\"\n    [height]=\"photoElement.height\"\n    [width]=\"photoElement.width\"\n    [top]=\"photoElement.top\"\n    [left]=\"photoElement.left\"></app-photo>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\nimport { NewMicrogreenEntryComponent } from '../new-microgreen-entry/new-microgreen-entry.component'\nimport { PlantNewComponent } from '../plant-new/plant-new.component'\nimport { PlantDetailsComponent } from '../plant-details/plant-details.component'\n\nexport class Rack {\n  trays: {\n    [name: string]: string\n  };\n}\n\n@Component({\n  selector: 'app-microgreens',\n  templateUrl: './microgreens.component.html',\n  styleUrls: ['./microgreens.component.scss']\n})\nexport class MicrogreensComponent implements OnInit {\n\n  crop_types: Observable<any[]>;\n  racks: Observable<any>;\n  racksRef: AngularFireObject<Rack>;\n  trays: Observable<any>;\n  firebase: AngularFireDatabase;\n  racksSnapshot: any;\n\n  // Default Rack\n  currentRack = \"1\";\n  trayNumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n\n  constructor(firebase: AngularFireDatabase, public dialog: MatDialog) {\n    this.firebase = firebase;\n    this.racks = this.firebase.object('racks').valueChanges();\n    this.racks.subscribe(event => this.racksSnapshot = event);\n    this.updateTrays();\n  }\n\n  newCropType() {\n    const dialogRef = this.dialog.open(NewMicrogreenEntryComponent, {});\n  }\n\n  handleTrayClick(tray_number, crop_id) {\n    if (crop_id == 0) {\n      this.openPlantNewDialog(tray_number)\n    }\n    else {\n      this.openPlantDetailsDialog(tray_number, crop_id)\n    }\n  }\n\n  updateTrays() {\n    this.trays = this.firebase.object('racks/' + this.currentRack + '/trays').valueChanges();\n  }\n\n  openPlantDetailsDialog(tray_number, crop_id) {\n    this.dialog.open(PlantDetailsComponent, {\n      width: \"80%\",\n      data: {\n        rack_number: this.currentRack,\n        tray_number: tray_number,\n        crop_id: crop_id\n      }\n    });   \n  }\n\n  openPlantNewDialog(tray_number): void {\n    this.dialog.open(PlantNewComponent, { \n      data: {\n        rack_number: this.currentRack,\n        tray_number: tray_number\n      }\n    });\n  }\n\n  compareNumber(a, b) {\n    return a.key - b.key\n  }\n\n  buttonValue(tray_value) {\n    if (tray_value == 0) {\n      return \"Plant New\";\n    } else {\n\n      return tray_value\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}","<!-- <ul>\n  <li class=\"text\" *ngFor=\"let crop_type of crop_types | async\">\n    {{crop_type}}\n  </li>\n</ul>\n<button mat-button aria-label=\"New Crop Type\" (click)=\"newCropType()\">\n  <mat-icon>add</mat-icon> New Crop Type\n</button> -->\n<div fxLayoutAlign=\"center center\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Rack</mat-label>\n    <mat-select [(value)]=\"currentRack\" (selectionChange)=\"updateTrays()\">\n      <mat-option *ngFor=\"let rack of (racks | async) | keyvalue\" [value]=\"rack.key\">\n        {{rack.key}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n<br>\n<div fxLayout=\"row wrap\">\n  <div fxFlex=\"25%\" class=\"trayContainer\" *ngFor=\"let tray of (trays | async) | keyvalue : compareNumber\">\n  \t<button fxFlex mat-stroked-button (click)=\"handleTrayClick(tray.key, tray.value)\" [ngClass]=\"{greenButton : tray.value != 0}\">\n  \t\t<mat-icon *ngIf=\"tray.value == 0\">add</mat-icon> \n      <mat-icon *ngIf=\"tray.value != 0\">grass</mat-icon> \n      <br>{{buttonValue(tray.value)}}\n  \t</button>\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit, Input, Output, HostListener, HostBinding, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.component.html',\n  styleUrls: ['./photo.component.scss']\n})\nexport class PhotoComponent implements OnInit {\n\n  @Input() sizes: any;\n  @HostBinding('style.height') \n  @Input() height: string;\n  @HostBinding('style.width') \n  @Input() width: string;\n  @HostBinding('style.top') \n  @Input() top: string;\n  @HostBinding('style.left') \n  @Input() left: string;\n\n  currentSource : string;\n  isFullscreen : boolean;\n  constructor() { }\n\n  ngOnInit() {\n    this.isFullscreen = false;\n    // Source thats always bigger than the row size.\n    this.currentSource = this.sizes.find(size => size.label == \"Medium 640\").source;\n  }\n\n  @HostListener('click', ['$event.target'])\n  onClick(button) {\n    this.isFullscreen = !this.isFullscreen;\n    if (this.isFullscreen) {\n      for (var size of this.sizes) {\n        if (size.width >= window.innerWidth || size.height >= window.innerHeight) {\n          this.currentSource = size.source;\n          break;\n        }\n      }\n    }\n  }\n\n\n}\n","<img class=\"photo-image\" [src]=\"currentSource\"/>\n<div *ngIf=\"isFullscreen\" class=\"fullscreen-theater\">\n  <img class=\"photo-image center-self\" [src]=\"currentSource\"/>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pancho Ruy';\n}\n","<router-outlet></router-outlet>","// Imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n// Angular Material Components\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\n\n\n// Providers\nimport { PhotoService } from './photo.service';\n\n// Declarations\nimport { AboutComponent } from './about/about.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { MenuToolbarComponent } from './menu-toolbar/menu-toolbar.component';\nimport { MicrogreensComponent } from './microgreens/microgreens.component';\nimport { NewMicrogreenEntryComponent } from './new-microgreen-entry/new-microgreen-entry.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PhotoComponent } from './photo/photo.component';\nimport { PhotographyComponent } from './photography/photography.component';\nimport { ProjectsComponent } from './projects/projects.component';\n\n// Environment\nimport { environment } from '../environments/environment';\nimport { PlantNewComponent } from './plant-new/plant-new.component';\nimport { PlantDetailsComponent } from './plant-details/plant-details.component';\n\n\n@NgModule({\n  declarations: [\n    AboutComponent,\n    AppComponent,\n    HomeComponent,\n    MainMenuComponent,\n    MenuToolbarComponent,\n    MicrogreensComponent,\n    NewMicrogreenEntryComponent,\n    PageNotFoundComponent,\n    PhotoComponent,\n    PhotographyComponent,\n    ProjectsComponent,\n    PlantNewComponent,\n    PlantDetailsComponent,\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatToolbarModule,\n    FormsModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatChipsModule,\n  ],\n  providers: [\n    PhotoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AngularFireObject } from '@angular/fire/database';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-plant-new',\n  templateUrl: './plant-new.component.html',\n  styleUrls: ['./plant-new.component.scss']\n})\nexport class PlantNewComponent implements OnInit {\n\n\tcrop_type_value: string;\n  seed_amount_value: number;\n\ttray_number: number;\n\track_number: number;\n  rack: AngularFireObject<any>;\n  crops: AngularFireList<any>;\n  crop_types: Observable<any[]>;\n\n  constructor(firebase: AngularFireDatabase,\n  \tpublic dialogRef: MatDialogRef<PlantNewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { rack_number: number, tray_number: number }) {\n  \tthis.rack = firebase.object('racks/' + data.rack_number + '/trays');\n  \tthis.tray_number = data.tray_number;\n    this.crop_types = firebase.list('crop_types', ref => ref.orderByValue()).valueChanges();\n    this.crops = firebase.list('crops');\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateTray() {\n    var crop_ref = this.crops.push({\n      crop_type: this.crop_type_value, \n      seed_amount: this.seed_amount_value, \n      time_planted: Date.now(),\n      state: \"planted\",\n    });\n    var new_crop_id = crop_ref.key;\n  \tthis.rack.update({[this.tray_number]: new_crop_id});\n  }\n\n  cancelAndClose(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Plant New Crop</h1>\n<div mat-dialog-content fxLayout=\"row wrap\">\n  <mat-form-field fxFlex=\"100%\" appearance=\"outline\">\n    <mat-label>Crop Type</mat-label>\n    <mat-select [(value)]=\"crop_type_value\">\n    \t<mat-option *ngFor=\"let crop_type of (crop_types | async)\" [value]=\"crop_type\">\n      {{crop_type}}\n    \t</mat-option>\n  \t</mat-select>\n  </mat-form-field>\n  <br>\n  <mat-form-field fxFlex=\"100%\" appearance=\"outline\">\n    <mat-label>Seed Amount</mat-label>\n    <input matInput [(ngModel)]=\"seed_amount_value\"/>\n    <span matSuffix>Oz</span>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-stroked-button fxFlex=\"1 0 1\" (click)=\"cancelAndClose()\">\n  \t<mat-icon>close</mat-icon>\n  \t<br>Cancel\n\t</button>\n  <button mat-stroked-button fxFlex=\"1 0 1\" class=\"greenButton\" [mat-dialog-close]=\"crop_type_value\" cdkFocusInitial (click)=\"updateTray()\">\n  \t<mat-icon>grass</mat-icon>\n  \t<br>Plant\n  </button>\n</div>","import { Component, OnInit} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-new-microgreen-entry',\n  templateUrl: './new-microgreen-entry.component.html',\n  styleUrls: ['./new-microgreen-entry.component.scss']\n})\nexport class NewMicrogreenEntryComponent implements OnInit {\n\n  crop_type: string;\n  cropsTypesWriteable: AngularFireList<string>;\n\n  constructor(firebase: AngularFireDatabase, public dialogRef: MatDialogRef<NewMicrogreenEntryComponent>) {\n    this.cropsTypesWriteable = firebase.list('crop_types');\n  }\n\n  ngOnInit(): void {\n  }\n\n  pushNewCrop() {\n    this.cropsTypesWriteable.push(this.crop_type);\n  }\n\n}\n","<h1 mat-dialog-title>New Crop Type</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Crop Type</mat-label>\n    <input matInput [(ngModel)]=\"crop_type\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"crop_type\" cdkFocusInitial (click)=\"pushNewCrop()\">Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"center-self\">\n   <h1>Oops!</h1>\n   That URL does not exist.\n   \n   <app-menu-toolbar></app-menu-toolbar>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PhotographyComponent } from './photography/photography.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { MicrogreensComponent } from './microgreens/microgreens.component';\n\nconst routes: Routes = [\n  {path: \"\", component: HomeComponent},\n  {path: \"photography\", component: PhotographyComponent},\n  {path: \"projects\", component: ProjectsComponent},\n  {path: \"micro\", component: MicrogreensComponent},\n  {path: \"about\", component: AboutComponent},\n  {path: \"**\", component: PageNotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  // Input State\n  private inputState: object;\n  private worldObjects: Set<any>;\n\n  @ViewChild('svgCanvas')\n  private svgCanvas: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.worldObjects = new Set;\n  }\n\n  handleMouseDown(event) {\n    if (event.target.classList.contains('svg-canvas')) {\n      this.createCircle(event.clientX, event.clientY);\n    }\n  }\n\n  private createCircle(posX: number, posY: number) {\n    var newCircle = new CircleObject(posX, posY);\n    this.worldObjects.add(newCircle.svgElement);\n    this.svgCanvas.nativeElement.appendChild(newCircle.svgElement);\n  }\n\n  private removeElement(target) {\n    target.parentElement.removeChild(target);\n  }\n\n}\n\nclass InputState {\n  public mouseDown: boolean;\n  public shiftKeyDown: boolean;\n}\n\nclass CircleObject {\n  svgElement: SVGCircleElement;\n  clicked: boolean;\n  hovered: boolean;\n  offsetX: number;\n  offsetY: number;\n\n  constructor(\n    posX: number,\n    posY: number,\n    radius: number = 50,\n    stroke: string = '#FFF',\n    strokeFocus: string = '#55F',\n    strokeWidth: string = '2px',\n    fill: string = '#000') {\n    this.clicked = false;\n    this.hovered = false;\n    this.svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    this.svgElement.classList.add('circle');\n    this.svgElement.setAttribute(\"cx\", String(posX));\n    this.svgElement.setAttribute(\"cy\", String(posY));\n    this.svgElement.setAttribute(\"r\", String(radius));\n    this.svgElement.setAttribute(\"stroke\", stroke);\n    this.svgElement.setAttribute(\"stroke-width\", String(strokeWidth));\n    this.svgElement.setAttribute(\"fill\", fill);\n    this.svgElement.addEventListener('mouseenter', this.handleMouseEnter(this))\n    this.svgElement.addEventListener('mouseleave', this.handleMouseLeave(this))\n    this.svgElement.addEventListener('mousedown', this.handleMouseDown(this))\n    this.svgElement.addEventListener('mouseup', this.handleMouseUp(this))\n  }\n\n  private handleMouseEnter(ref) {\n    return function(event) {\n      ref.hovered = true;\n      ref.updateColor();\n    }\n  }\n\n  private handleMouseLeave(ref) {\n    return function(event) {\n      ref.hovered = false;\n      ref.updateColor();\n    }\n  }\n\n  private handleMouseDown(ref) {\n    return function(event) {\n      ref.clicked = true;\n      ref.offsetX = ref.svgElement.getAttribute(\"cx\") - event.clientX\n      ref.offsetY = ref.svgElement.getAttribute(\"cy\") - event.clientY\n      var parent = ref.svgElement.parentElement\n      parent.addEventListener('mousemove', ref.handleMouseMove(ref))\n      ref.updateColor();\n    }\n  }\n\n  private handleMouseUp(ref) {\n    return function(event) {\n      ref.clicked = false;\n      var parent = ref.svgElement.parentElement\n      parent.removeEventListener('mousemove', ref.handleMouseMove(ref))\n      ref.updateColor();\n    }\n  }\n\n  private handleMouseMove(ref) {\n    return function(event) {\n      if (ref.clicked) {\n        ref.svgElement.setAttribute(\"cx\", event.clientX + ref.offsetX);\n        ref.svgElement.setAttribute(\"cy\", event.clientY + ref.offsetY);\n      }\n    }\n  }\n\n  private updateColor() {\n    if (this.clicked) {\n      this.svgElement.setAttribute(\"stroke\", '#FF5');\n    }\n    else if (this.hovered) {\n      this.svgElement.setAttribute(\"stroke\", '#55F');\n    }\n    else {\n      this.svgElement.setAttribute(\"stroke\", '#FFF');\n    }\n\n  }\n\n}","<svg #svgCanvas xmlns=\"http://www.w3.org/2000/svg\" class=\"svg-canvas\"\n(mousedown)=\"handleMouseDown($event)\">\n</svg>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}